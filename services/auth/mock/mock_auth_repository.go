// Code generated by MockGen. DO NOT EDIT.
// Source: internal/auth/port/repository.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/zikrykr/library-management/services/auth/internal/auth/model"
)

// MockIAuthRepo is a mock of IAuthRepo interface.
type MockIAuthRepo struct {
	ctrl     *gomock.Controller
	recorder *MockIAuthRepoMockRecorder
}

// MockIAuthRepoMockRecorder is the mock recorder for MockIAuthRepo.
type MockIAuthRepoMockRecorder struct {
	mock *MockIAuthRepo
}

// NewMockIAuthRepo creates a new mock instance.
func NewMockIAuthRepo(ctrl *gomock.Controller) *MockIAuthRepo {
	mock := &MockIAuthRepo{ctrl: ctrl}
	mock.recorder = &MockIAuthRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIAuthRepo) EXPECT() *MockIAuthRepoMockRecorder {
	return m.recorder
}

// CreateUser mocks base method.
func (m *MockIAuthRepo) CreateUser(ctx context.Context, data model.User) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUser", ctx, data)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateUser indicates an expected call of CreateUser.
func (mr *MockIAuthRepoMockRecorder) CreateUser(ctx, data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUser", reflect.TypeOf((*MockIAuthRepo)(nil).CreateUser), ctx, data)
}

// GetUserByEmail mocks base method.
func (m *MockIAuthRepo) GetUserByEmail(ctx context.Context, email string) (model.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserByEmail", ctx, email)
	ret0, _ := ret[0].(model.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserByEmail indicates an expected call of GetUserByEmail.
func (mr *MockIAuthRepoMockRecorder) GetUserByEmail(ctx, email interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserByEmail", reflect.TypeOf((*MockIAuthRepo)(nil).GetUserByEmail), ctx, email)
}
